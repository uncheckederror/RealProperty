// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eRealProperty.Models;

#nullable disable

namespace eRealProperty.Migrations
{
    [DbContext(typeof(eRealPropertyContext))]
    [Migration("20220502185821_CharToStringForSales")]
    partial class CharToStringForSales
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("eRealProperty.Models.ApartmentComplex", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int>("AvgUnitSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BldgQuality")
                        .HasColumnType("TEXT");

                    b.Property<string>("ComplexDescr")
                        .HasColumnType("TEXT");

                    b.Property<string>("Condition")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConstrClass")
                        .HasColumnType("TEXT");

                    b.Property<int>("EffYr")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Elevators")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fireplace")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IngestedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Laundry")
                        .HasColumnType("TEXT");

                    b.Property<string>("Major")
                        .HasColumnType("TEXT");

                    b.Property<string>("Minor")
                        .HasColumnType("TEXT");

                    b.Property<int>("NbrBldgs")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NbrStories")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NbrUnits")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParcelNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("PcntComplete")
                        .HasColumnType("TEXT");

                    b.Property<string>("PcntWithView")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectAppeal")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectLocation")
                        .HasColumnType("TEXT");

                    b.Property<string>("SectySystem")
                        .HasColumnType("TEXT");

                    b.Property<int>("YrBuilt")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParcelNumber");

                    b.ToTable("ApartmentComplexes");
                });

            modelBuilder.Entity("eRealProperty.Models.CommericalBuilding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("BldgDescr")
                        .HasColumnType("TEXT");

                    b.Property<int>("BldgGrossSqFt")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BldgNbr")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BldgNetSqFt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BldgQuality")
                        .HasColumnType("TEXT");

                    b.Property<string>("BuildingNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConstrClass")
                        .HasColumnType("TEXT");

                    b.Property<string>("DirectionPrefix")
                        .HasColumnType("TEXT");

                    b.Property<string>("DirectionSuffix")
                        .HasColumnType("TEXT");

                    b.Property<int>("EffYr")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Elevators")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fraction")
                        .HasColumnType("TEXT");

                    b.Property<string>("HeatingSystem")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IngestedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Major")
                        .HasColumnType("TEXT");

                    b.Property<string>("Minor")
                        .HasColumnType("TEXT");

                    b.Property<int>("NbrBldgs")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NbrStories")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParcelNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("PcntComplete")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PredominantUse")
                        .HasColumnType("TEXT");

                    b.Property<string>("Shape")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sprinklers")
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetName")
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetType")
                        .HasColumnType("TEXT");

                    b.Property<int>("YrBuilt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ZipCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParcelNumber");

                    b.ToTable("CommericalBuildings");
                });

            modelBuilder.Entity("eRealProperty.Models.CommericalBuildingFeature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("BldgNbr")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FeatureType")
                        .HasColumnType("TEXT");

                    b.Property<string>("GrossSqFt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IngestedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Major")
                        .HasColumnType("TEXT");

                    b.Property<string>("Minor")
                        .HasColumnType("TEXT");

                    b.Property<string>("NetSqFt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParcelNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParcelNumber");

                    b.ToTable("CommericalBuildingFeatures");
                });

            modelBuilder.Entity("eRealProperty.Models.CommericalBuildingSection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("BldgNbr")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GrossSqFt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IngestedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Major")
                        .HasColumnType("TEXT");

                    b.Property<string>("Minor")
                        .HasColumnType("TEXT");

                    b.Property<string>("NbrStories")
                        .HasColumnType("TEXT");

                    b.Property<string>("NetSqFt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParcelNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("SectionDescr")
                        .HasColumnType("TEXT");

                    b.Property<string>("SectionNbr")
                        .HasColumnType("TEXT");

                    b.Property<string>("SectionUse")
                        .HasColumnType("TEXT");

                    b.Property<string>("StoryHeight")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParcelNumber");

                    b.ToTable("CommericalBuildingSections");
                });

            modelBuilder.Entity("eRealProperty.Models.CondoComplex", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("AptConversion")
                        .HasColumnType("TEXT");

                    b.Property<int>("AvgUnitSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BldgQuality")
                        .HasColumnType("TEXT");

                    b.Property<string>("BuildingNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("ComplexDescr")
                        .HasColumnType("TEXT");

                    b.Property<string>("ComplexType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Condition")
                        .HasColumnType("TEXT");

                    b.Property<string>("CondoLandType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConstrClass")
                        .HasColumnType("TEXT");

                    b.Property<string>("DirectionPrefix")
                        .HasColumnType("TEXT");

                    b.Property<string>("DirectionSuffix")
                        .HasColumnType("TEXT");

                    b.Property<int>("EffYr")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Elevators")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fireplace")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fraction")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IngestedOn")
                        .HasColumnType("TEXT");

                    b.Property<int>("LandPerUnit")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Laundry")
                        .HasColumnType("TEXT");

                    b.Property<string>("Major")
                        .HasColumnType("TEXT");

                    b.Property<int>("NbrBldgs")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NbrStories")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NbrUnits")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PcntComplete")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PcntWithView")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProjectAppeal")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProjectLocation")
                        .HasColumnType("TEXT");

                    b.Property<string>("SectySystem")
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetName")
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetType")
                        .HasColumnType("TEXT");

                    b.Property<int>("YrBuilt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ZipCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Major");

                    b.ToTable("CondoComplexes");
                });

            modelBuilder.Entity("eRealProperty.Models.CondoUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int>("Bath3qtrCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BathFullCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BathHalfCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BldgNbr")
                        .HasColumnType("TEXT");

                    b.Property<string>("BuildingNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Condition")
                        .HasColumnType("TEXT");

                    b.Property<string>("DirectionPrefix")
                        .HasColumnType("TEXT");

                    b.Property<string>("DirectionSuffix")
                        .HasColumnType("TEXT");

                    b.Property<string>("EndUnit")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fireplace")
                        .HasColumnType("TEXT");

                    b.Property<string>("FloorNbr")
                        .HasColumnType("TEXT");

                    b.Property<int>("Footage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Fraction")
                        .HasColumnType("TEXT");

                    b.Property<string>("Grade")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IngestedOn")
                        .HasColumnType("TEXT");

                    b.Property<int>("Length")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MHomeDescr")
                        .HasColumnType("TEXT");

                    b.Property<string>("Major")
                        .HasColumnType("TEXT");

                    b.Property<string>("Minor")
                        .HasColumnType("TEXT");

                    b.Property<string>("NbrBedrooms")
                        .HasColumnType("TEXT");

                    b.Property<string>("OtherRoom")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParcelNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("PcntOwnership")
                        .HasColumnType("TEXT");

                    b.Property<string>("PersPropAcctNbr")
                        .HasColumnType("TEXT");

                    b.Property<int>("PkgBasement")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PkgBasementTandem")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PkgCarport")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PkgGarage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PkgGarageTandem")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PkgOpen")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PkgOtherType")
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetName")
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetType")
                        .HasColumnType("TEXT");

                    b.Property<string>("TopFloor")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnitDescr")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnitLoc")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnitNbr")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnitOfMeasure")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnitQuality")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnitType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ViewCityTerritorial")
                        .HasColumnType("TEXT");

                    b.Property<string>("ViewLakeRiver")
                        .HasColumnType("TEXT");

                    b.Property<string>("ViewLakeWaSamm")
                        .HasColumnType("TEXT");

                    b.Property<string>("ViewMountain")
                        .HasColumnType("TEXT");

                    b.Property<string>("ViewPugetSound")
                        .HasColumnType("TEXT");

                    b.Property<int>("Width")
                        .HasColumnType("INTEGER");

                    b.Property<int>("YrBuilt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ZipCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParcelNumber");

                    b.ToTable("CondoUnits");
                });

            modelBuilder.Entity("eRealProperty.Models.LegalDiscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IngestedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("LegalDesc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Major")
                        .HasColumnType("TEXT");

                    b.Property<string>("Minor")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParcelNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParcelNumber");

                    b.ToTable("LegalDiscriptions");
                });

            modelBuilder.Entity("eRealProperty.Models.Permit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IngestedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Major")
                        .HasColumnType("TEXT");

                    b.Property<string>("Minor")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParcelNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("PcntComplete")
                        .HasColumnType("TEXT");

                    b.Property<string>("PermitNbr")
                        .HasColumnType("TEXT");

                    b.Property<string>("PermitStatus")
                        .HasColumnType("TEXT");

                    b.Property<string>("PermitType")
                        .HasColumnType("TEXT");

                    b.Property<int>("PermitVal")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParcelNumber");

                    b.ToTable("Permits");
                });

            modelBuilder.Entity("eRealProperty.Models.PermitDetailHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IngestedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("PermitItem")
                        .HasColumnType("TEXT");

                    b.Property<string>("PermitNbr")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PermitNbr");

                    b.ToTable("PermitDetailHistories");
                });

            modelBuilder.Entity("eRealProperty.Models.PropertyParcel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Access")
                        .HasColumnType("TEXT");

                    b.Property<string>("AdjacentGolfFairway")
                        .HasColumnType("TEXT");

                    b.Property<string>("AdjacentGreenbelt")
                        .HasColumnType("TEXT");

                    b.Property<string>("AirportNoise")
                        .HasColumnType("TEXT");

                    b.Property<string>("Area")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cascades")
                        .HasColumnType("TEXT");

                    b.Property<string>("CoalMineHazard")
                        .HasColumnType("TEXT");

                    b.Property<string>("Contamination")
                        .HasColumnType("TEXT");

                    b.Property<string>("CriticalDrainage")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrentUseDesignation")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrentZoning")
                        .HasColumnType("TEXT");

                    b.Property<string>("DNRLease")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeedRestrictions")
                        .HasColumnType("TEXT");

                    b.Property<string>("DevelopmentRightsPurch")
                        .HasColumnType("TEXT");

                    b.Property<string>("DistrictName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Easements")
                        .HasColumnType("TEXT");

                    b.Property<string>("ErosionHazard")
                        .HasColumnType("TEXT");

                    b.Property<string>("HBUAsIfVacant")
                        .HasColumnType("TEXT");

                    b.Property<string>("HBUAsImproved")
                        .HasColumnType("TEXT");

                    b.Property<string>("HistoricSite")
                        .HasColumnType("TEXT");

                    b.Property<string>("HundredYrFloodPlain")
                        .HasColumnType("TEXT");

                    b.Property<string>("InadequateParking")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IngestedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("LakeSammamish")
                        .HasColumnType("TEXT");

                    b.Property<string>("LakeWashington")
                        .HasColumnType("TEXT");

                    b.Property<string>("LandfillBuffer")
                        .HasColumnType("TEXT");

                    b.Property<string>("LandslideHazard")
                        .HasColumnType("TEXT");

                    b.Property<string>("LevyCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("LotDepthFactor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Major")
                        .HasColumnType("TEXT");

                    b.Property<string>("Minor")
                        .HasColumnType("TEXT");

                    b.Property<string>("MtRainier")
                        .HasColumnType("TEXT");

                    b.Property<string>("NativeGrowthProtEsmt")
                        .HasColumnType("TEXT");

                    b.Property<string>("NbrBldgSites")
                        .HasColumnType("TEXT");

                    b.Property<string>("Olympics")
                        .HasColumnType("TEXT");

                    b.Property<string>("OtherDesignation")
                        .HasColumnType("TEXT");

                    b.Property<string>("OtherNuisances")
                        .HasColumnType("TEXT");

                    b.Property<string>("OtherProblems")
                        .HasColumnType("TEXT");

                    b.Property<string>("OtherView")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParcelNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("PcntUnusable")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlatBlock")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlatLot")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlatName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PowerLines")
                        .HasColumnType("TEXT");

                    b.Property<string>("PresentUse")
                        .HasColumnType("TEXT");

                    b.Property<string>("PropName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PropType")
                        .HasColumnType("TEXT");

                    b.Property<string>("PugetSound")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuarterSection")
                        .HasColumnType("TEXT");

                    b.Property<int>("Range")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RestrictiveSzShape")
                        .HasColumnType("TEXT");

                    b.Property<string>("SeattleSkyline")
                        .HasColumnType("TEXT");

                    b.Property<int>("Section")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SeismicHazard")
                        .HasColumnType("TEXT");

                    b.Property<string>("SensitiveAreaTract")
                        .HasColumnType("TEXT");

                    b.Property<string>("SewerSystem")
                        .HasColumnType("TEXT");

                    b.Property<string>("SmallLakeRiverCreek")
                        .HasColumnType("TEXT");

                    b.Property<string>("SpecArea")
                        .HasColumnType("TEXT");

                    b.Property<string>("SpecSubArea")
                        .HasColumnType("TEXT");

                    b.Property<string>("SpeciesOfConcern")
                        .HasColumnType("TEXT");

                    b.Property<string>("SqFtLot")
                        .HasColumnType("TEXT");

                    b.Property<string>("SteepSlopeHazard")
                        .HasColumnType("TEXT");

                    b.Property<string>("Stream")
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetSurface")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubArea")
                        .HasColumnType("TEXT");

                    b.Property<string>("Territorial")
                        .HasColumnType("TEXT");

                    b.Property<string>("TidelandShoreland")
                        .HasColumnType("TEXT");

                    b.Property<string>("Topography")
                        .HasColumnType("TEXT");

                    b.Property<int>("Township")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TrafficNoise")
                        .HasColumnType("TEXT");

                    b.Property<string>("TranspConcurrency")
                        .HasColumnType("TEXT");

                    b.Property<string>("Unbuildable")
                        .HasColumnType("TEXT");

                    b.Property<string>("WaterProblems")
                        .HasColumnType("TEXT");

                    b.Property<string>("WaterSystem")
                        .HasColumnType("TEXT");

                    b.Property<string>("Wetland")
                        .HasColumnType("TEXT");

                    b.Property<string>("WfntAccessRights")
                        .HasColumnType("TEXT");

                    b.Property<string>("WfntBank")
                        .HasColumnType("TEXT");

                    b.Property<string>("WfntFootage")
                        .HasColumnType("TEXT");

                    b.Property<string>("WfntLocation")
                        .HasColumnType("TEXT");

                    b.Property<string>("WfntPoorQuality")
                        .HasColumnType("TEXT");

                    b.Property<string>("WfntProximityInfluence")
                        .HasColumnType("TEXT");

                    b.Property<string>("WfntRestrictedAccess")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParcelNumber");

                    b.ToTable("PropertyParcels");
                });

            modelBuilder.Entity("eRealProperty.Models.RealPropertyAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AcctNbr")
                        .HasColumnType("TEXT");

                    b.Property<string>("AddrLine")
                        .HasColumnType("TEXT");

                    b.Property<string>("ApprImpsVal")
                        .HasColumnType("TEXT");

                    b.Property<string>("ApprLandVal")
                        .HasColumnType("TEXT");

                    b.Property<string>("AttnLine")
                        .HasColumnType("TEXT");

                    b.Property<int>("BillYr")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CityState")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IngestedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("LegalDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("LevyCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("Major")
                        .HasColumnType("TEXT");

                    b.Property<string>("Minor")
                        .HasColumnType("TEXT");

                    b.Property<string>("NewConstructionFlag")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParcelNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxStat")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxValReason")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxableImpsVal")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxableLandVal")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AcctNbr");

                    b.ToTable("RealPropertyAccounts");
                });

            modelBuilder.Entity("eRealProperty.Models.RealPropertyAccountSale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AFCurrentUseLand")
                        .HasColumnType("TEXT");

                    b.Property<string>("AFForestLand")
                        .HasColumnType("TEXT");

                    b.Property<string>("AFHistoricProperty")
                        .HasColumnType("TEXT");

                    b.Property<string>("AFNonProfitUse")
                        .HasColumnType("TEXT");

                    b.Property<string>("BuyerName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DocumentDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ExciseTaxNbr")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("IngestedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Major")
                        .HasColumnType("TEXT");

                    b.Property<string>("Minor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Page")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParcelNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlatBlock")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlatLot")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlatNbr")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlatType")
                        .HasColumnType("TEXT");

                    b.Property<string>("PrincipalUse")
                        .HasColumnType("TEXT");

                    b.Property<string>("PropertyClass")
                        .HasColumnType("TEXT");

                    b.Property<string>("PropertyType")
                        .HasColumnType("TEXT");

                    b.Property<string>("RecordingNbr")
                        .HasColumnType("TEXT");

                    b.Property<string>("SaleInstrument")
                        .HasColumnType("TEXT");

                    b.Property<long>("SalePrice")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SaleReason")
                        .HasColumnType("TEXT");

                    b.Property<string>("SaleWarning")
                        .HasColumnType("TEXT");

                    b.Property<string>("SellerName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Volume")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParcelNumber");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("eRealProperty.Models.RealPropertyAccountTaxYear", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("ApprImpIncr")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ApprImpsVal")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ApprLandVal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChangeDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ChangeDocId")
                        .HasColumnType("TEXT");

                    b.Property<long>("ImpsVal")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("IngestedOn")
                        .HasColumnType("TEXT");

                    b.Property<long>("LandVal")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LevyCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Major")
                        .HasColumnType("TEXT");

                    b.Property<string>("Minor")
                        .HasColumnType("TEXT");

                    b.Property<int>("OmitYr")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParcelNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Reason")
                        .HasColumnType("TEXT");

                    b.Property<char>("SplitCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxStatus")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxValReason")
                        .HasColumnType("TEXT");

                    b.Property<int>("TaxYr")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParcelNumber");

                    b.ToTable("RealPropertyAccountTaxYears");
                });

            modelBuilder.Entity("eRealProperty.Models.ResidentialBuilding", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AddnlCost")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int>("Bath3qtrCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BathFullCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BathHalfCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Bedrooms")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BldgGrade")
                        .HasColumnType("TEXT");

                    b.Property<int>("BldgGradeVar")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BldgNbr")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BrickStone")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BuildingNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Condition")
                        .HasColumnType("TEXT");

                    b.Property<string>("DaylightBasement")
                        .HasColumnType("TEXT");

                    b.Property<string>("DirectionPrefix")
                        .HasColumnType("TEXT");

                    b.Property<string>("DirectionSuffix")
                        .HasColumnType("TEXT");

                    b.Property<string>("FinBasementGrade")
                        .HasColumnType("TEXT");

                    b.Property<int>("FpAdditional")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FpFreestanding")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FpMultiStory")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FpSingleStory")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Fraction")
                        .HasColumnType("TEXT");

                    b.Property<string>("HeatSource")
                        .HasColumnType("TEXT");

                    b.Property<string>("HeatSystem")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IngestedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Major")
                        .HasColumnType("TEXT");

                    b.Property<string>("Minor")
                        .HasColumnType("TEXT");

                    b.Property<int>("NbrLivingUnits")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Obsolescence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParcelNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("PcntComplete")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PcntNetCondition")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SqFt1stFloor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SqFt2ndFloor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SqFtDeck")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SqFtEnclosedPorch")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SqFtFinBasement")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SqFtGarageAttached")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SqFtGarageBasement")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SqFtHalfFloor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SqFtOpenPorch")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SqFtTotBasement")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SqFtTotLiving")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SqFtUnfinFull")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SqFtUnfinHalf")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SqFtUpperFloor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Stories")
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetName")
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ViewUtilization")
                        .HasColumnType("TEXT");

                    b.Property<int>("YrBuilt")
                        .HasColumnType("INTEGER");

                    b.Property<int>("YrRenovated")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ZipCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParcelNumber");

                    b.ToTable("ResidentialBuildings");
                });

            modelBuilder.Entity("eRealProperty.Models.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Agent")
                        .HasColumnType("TEXT");

                    b.Property<string>("AppealNbr")
                        .HasColumnType("TEXT");

                    b.Property<string>("AppealRecommended")
                        .HasColumnType("TEXT");

                    b.Property<string>("AppellantReason")
                        .HasColumnType("TEXT");

                    b.Property<string>("AssrRecommendation")
                        .HasColumnType("TEXT");

                    b.Property<int>("BillYr")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BoardReason")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HearingDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("HearingResult")
                        .HasColumnType("TEXT");

                    b.Property<string>("HearingType")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IngestedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Major")
                        .HasColumnType("TEXT");

                    b.Property<string>("Minor")
                        .HasColumnType("TEXT");

                    b.Property<string>("NoteId")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderTerm")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParcelNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("RelatedAppealNbr")
                        .HasColumnType("TEXT");

                    b.Property<string>("RespAppr")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReviewSource")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReviewType")
                        .HasColumnType("TEXT");

                    b.Property<string>("StatusAssessor")
                        .HasColumnType("TEXT");

                    b.Property<string>("StatusAssmtReview")
                        .HasColumnType("TEXT");

                    b.Property<string>("StatusBoard")
                        .HasColumnType("TEXT");

                    b.Property<string>("StatusStipulation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueType")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParcelNumber");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("eRealProperty.Models.ReviewDescription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AppealNbr")
                        .HasColumnType("TEXT");

                    b.Property<int>("ApprImpsVal")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApprLandVal")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("EntryType")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IngestedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("SourcePerson")
                        .HasColumnType("TEXT");

                    b.Property<string>("TargetPerson")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValuationType")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AppealNbr");

                    b.ToTable("ReviewDescriptions");
                });

            modelBuilder.Entity("eRealProperty.Models.TaxLevy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("DistrictAbbrev")
                        .HasColumnType("TEXT");

                    b.Property<string>("DistrictName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IngestedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("LevyCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LevyCode");

                    b.ToTable("LevyCodes");
                });

            modelBuilder.Entity("eRealProperty.Models.UnitBreakdown", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IngestedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Major")
                        .HasColumnType("TEXT");

                    b.Property<string>("Minor")
                        .HasColumnType("TEXT");

                    b.Property<string>("NbrBaths")
                        .HasColumnType("TEXT");

                    b.Property<string>("NbrBedrooms")
                        .HasColumnType("TEXT");

                    b.Property<int>("NbrThisType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParcelNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("SqFt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UnitTypeItemId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ParcelNumber");

                    b.ToTable("UnitBreakdowns");
                });
#pragma warning restore 612, 618
        }
    }
}
